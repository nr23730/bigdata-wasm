// Generated from BigData.g4 by ANTLR 4.7.1
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002%\u00cc\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0004$\t$\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003",
    "\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003",
    "\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003",
    "\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003",
    "\u0018\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001d\u0003\u001d\u0003",
    "\u001d\u0005\u001d\u009c\n\u001d\u0003\u001e\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001f\u0003\u001f",
    "\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f",
    "\u0003 \u0003 \u0003 \u0003 \u0003!\u0003!\u0007!\u00b3\n!\f!\u000e",
    "!\u00b6\u000b!\u0003\"\u0006\"\u00b9\n\"\r\"\u000e\"\u00ba\u0003#\u0003",
    "#\u0007#\u00bf\n#\f#\u000e#\u00c2\u000b#\u0003#\u0003#\u0003$\u0006",
    "$\u00c7\n$\r$\u000e$\u00c8\u0003$\u0003$\u0003\u00c0\u0002%\u0003\u0003",
    "\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013",
    "\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011",
    "!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b",
    "5\u001c7\u001d9\u001e;\u001f= ?!A\"C#E$G%\u0003\u0002\u0006\u0004\u0002",
    "C\\c|\u0005\u00022;C\\c|\u0003\u00022;\u0005\u0002\u000b\f\u000f\u000f",
    "\"\"\u0002\u00d1\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003",
    "\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003",
    "\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003",
    "\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003",
    "\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003",
    "\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003",
    "\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003",
    "\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003",
    "\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002",
    "\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002",
    "\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002",
    "\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u0002",
    "3\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003",
    "\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002",
    "\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0002?\u0003\u0002\u0002",
    "\u0002\u0002A\u0003\u0002\u0002\u0002\u0002C\u0003\u0002\u0002\u0002",
    "\u0002E\u0003\u0002\u0002\u0002\u0002G\u0003\u0002\u0002\u0002\u0003",
    "I\u0003\u0002\u0002\u0002\u0005L\u0003\u0002\u0002\u0002\u0007N\u0003",
    "\u0002\u0002\u0002\tP\u0003\u0002\u0002\u0002\u000bU\u0003\u0002\u0002",
    "\u0002\rW\u0003\u0002\u0002\u0002\u000fY\u0003\u0002\u0002\u0002\u0011",
    "_\u0003\u0002\u0002\u0002\u0013c\u0003\u0002\u0002\u0002\u0015e\u0003",
    "\u0002\u0002\u0002\u0017g\u0003\u0002\u0002\u0002\u0019i\u0003\u0002",
    "\u0002\u0002\u001bk\u0003\u0002\u0002\u0002\u001dm\u0003\u0002\u0002",
    "\u0002\u001fo\u0003\u0002\u0002\u0002!r\u0003\u0002\u0002\u0002#t\u0003",
    "\u0002\u0002\u0002%w\u0003\u0002\u0002\u0002\'z\u0003\u0002\u0002\u0002",
    ")}\u0003\u0002\u0002\u0002+\u0080\u0003\u0002\u0002\u0002-\u0083\u0003",
    "\u0002\u0002\u0002/\u0087\u0003\u0002\u0002\u00021\u0089\u0003\u0002",
    "\u0002\u00023\u008b\u0003\u0002\u0002\u00025\u008f\u0003\u0002\u0002",
    "\u00027\u0096\u0003\u0002\u0002\u00029\u009b\u0003\u0002\u0002\u0002",
    ";\u009d\u0003\u0002\u0002\u0002=\u00a4\u0003\u0002\u0002\u0002?\u00ac",
    "\u0003\u0002\u0002\u0002A\u00b0\u0003\u0002\u0002\u0002C\u00b8\u0003",
    "\u0002\u0002\u0002E\u00bc\u0003\u0002\u0002\u0002G\u00c6\u0003\u0002",
    "\u0002\u0002IJ\u0007k\u0002\u0002JK\u0007h\u0002\u0002K\u0004\u0003",
    "\u0002\u0002\u0002LM\u0007*\u0002\u0002M\u0006\u0003\u0002\u0002\u0002",
    "NO\u0007+\u0002\u0002O\b\u0003\u0002\u0002\u0002PQ\u0007g\u0002\u0002",
    "QR\u0007n\u0002\u0002RS\u0007u\u0002\u0002ST\u0007g\u0002\u0002T\n\u0003",
    "\u0002\u0002\u0002UV\u0007}\u0002\u0002V\f\u0003\u0002\u0002\u0002W",
    "X\u0007\u007f\u0002\u0002X\u000e\u0003\u0002\u0002\u0002YZ\u0007y\u0002",
    "\u0002Z[\u0007j\u0002\u0002[\\\u0007k\u0002\u0002\\]\u0007n\u0002\u0002",
    "]^\u0007g\u0002\u0002^\u0010\u0003\u0002\u0002\u0002_`\u0007h\u0002",
    "\u0002`a\u0007q\u0002\u0002ab\u0007t\u0002\u0002b\u0012\u0003\u0002",
    "\u0002\u0002cd\u0007=\u0002\u0002d\u0014\u0003\u0002\u0002\u0002ef\u0007",
    "1\u0002\u0002f\u0016\u0003\u0002\u0002\u0002gh\u0007,\u0002\u0002h\u0018",
    "\u0003\u0002\u0002\u0002ij\u0007/\u0002\u0002j\u001a\u0003\u0002\u0002",
    "\u0002kl\u0007-\u0002\u0002l\u001c\u0003\u0002\u0002\u0002mn\u0007>",
    "\u0002\u0002n\u001e\u0003\u0002\u0002\u0002op\u0007>\u0002\u0002pq\u0007",
    "?\u0002\u0002q \u0003\u0002\u0002\u0002rs\u0007@\u0002\u0002s\"\u0003",
    "\u0002\u0002\u0002tu\u0007@\u0002\u0002uv\u0007?\u0002\u0002v$\u0003",
    "\u0002\u0002\u0002wx\u0007?\u0002\u0002xy\u0007?\u0002\u0002y&\u0003",
    "\u0002\u0002\u0002z{\u0007#\u0002\u0002{|\u0007?\u0002\u0002|(\u0003",
    "\u0002\u0002\u0002}~\u0007(\u0002\u0002~\u007f\u0007(\u0002\u0002\u007f",
    "*\u0003\u0002\u0002\u0002\u0080\u0081\u0007~\u0002\u0002\u0081\u0082",
    "\u0007~\u0002\u0002\u0082,\u0003\u0002\u0002\u0002\u0083\u0084\u0007",
    "x\u0002\u0002\u0084\u0085\u0007c\u0002\u0002\u0085\u0086\u0007t\u0002",
    "\u0002\u0086.\u0003\u0002\u0002\u0002\u0087\u0088\u0007<\u0002\u0002",
    "\u00880\u0003\u0002\u0002\u0002\u0089\u008a\u0007?\u0002\u0002\u008a",
    "2\u0003\u0002\u0002\u0002\u008b\u008c\u0007h\u0002\u0002\u008c\u008d",
    "\u0007w\u0002\u0002\u008d\u008e\u0007p\u0002\u0002\u008e4\u0003\u0002",
    "\u0002\u0002\u008f\u0090\u0007t\u0002\u0002\u0090\u0091\u0007g\u0002",
    "\u0002\u0091\u0092\u0007v\u0002\u0002\u0092\u0093\u0007w\u0002\u0002",
    "\u0093\u0094\u0007t\u0002\u0002\u0094\u0095\u0007p\u0002\u0002\u0095",
    "6\u0003\u0002\u0002\u0002\u0096\u0097\u0007.\u0002\u0002\u00978\u0003",
    "\u0002\u0002\u0002\u0098\u009c\u0005? \u0002\u0099\u009c\u0005;\u001e",
    "\u0002\u009a\u009c\u0005=\u001f\u0002\u009b\u0098\u0003\u0002\u0002",
    "\u0002\u009b\u0099\u0003\u0002\u0002\u0002\u009b\u009a\u0003\u0002\u0002",
    "\u0002\u009c:\u0003\u0002\u0002\u0002\u009d\u009e\u0007U\u0002\u0002",
    "\u009e\u009f\u0007v\u0002\u0002\u009f\u00a0\u0007t\u0002\u0002\u00a0",
    "\u00a1\u0007k\u0002\u0002\u00a1\u00a2\u0007p\u0002\u0002\u00a2\u00a3",
    "\u0007i\u0002\u0002\u00a3<\u0003\u0002\u0002\u0002\u00a4\u00a5\u0007",
    "D\u0002\u0002\u00a5\u00a6\u0007q\u0002\u0002\u00a6\u00a7\u0007q\u0002",
    "\u0002\u00a7\u00a8\u0007n\u0002\u0002\u00a8\u00a9\u0007g\u0002\u0002",
    "\u00a9\u00aa\u0007c\u0002\u0002\u00aa\u00ab\u0007p\u0002\u0002\u00ab",
    ">\u0003\u0002\u0002\u0002\u00ac\u00ad\u0007K\u0002\u0002\u00ad\u00ae",
    "\u0007p\u0002\u0002\u00ae\u00af\u0007v\u0002\u0002\u00af@\u0003\u0002",
    "\u0002\u0002\u00b0\u00b4\t\u0002\u0002\u0002\u00b1\u00b3\t\u0003\u0002",
    "\u0002\u00b2\u00b1\u0003\u0002\u0002\u0002\u00b3\u00b6\u0003\u0002\u0002",
    "\u0002\u00b4\u00b2\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002\u0002",
    "\u0002\u00b5B\u0003\u0002\u0002\u0002\u00b6\u00b4\u0003\u0002\u0002",
    "\u0002\u00b7\u00b9\t\u0004\u0002\u0002\u00b8\u00b7\u0003\u0002\u0002",
    "\u0002\u00b9\u00ba\u0003\u0002\u0002\u0002\u00ba\u00b8\u0003\u0002\u0002",
    "\u0002\u00ba\u00bb\u0003\u0002\u0002\u0002\u00bbD\u0003\u0002\u0002",
    "\u0002\u00bc\u00c0\u0007$\u0002\u0002\u00bd\u00bf\u000b\u0002\u0002",
    "\u0002\u00be\u00bd\u0003\u0002\u0002\u0002\u00bf\u00c2\u0003\u0002\u0002",
    "\u0002\u00c0\u00c1\u0003\u0002\u0002\u0002\u00c0\u00be\u0003\u0002\u0002",
    "\u0002\u00c1\u00c3\u0003\u0002\u0002\u0002\u00c2\u00c0\u0003\u0002\u0002",
    "\u0002\u00c3\u00c4\u0007$\u0002\u0002\u00c4F\u0003\u0002\u0002\u0002",
    "\u00c5\u00c7\t\u0005\u0002\u0002\u00c6\u00c5\u0003\u0002\u0002\u0002",
    "\u00c7\u00c8\u0003\u0002\u0002\u0002\u00c8\u00c6\u0003\u0002\u0002\u0002",
    "\u00c8\u00c9\u0003\u0002\u0002\u0002\u00c9\u00ca\u0003\u0002\u0002\u0002",
    "\u00ca\u00cb\b$\u0002\u0002\u00cbH\u0003\u0002\u0002\u0002\b\u0002\u009b",
    "\u00b4\u00ba\u00c0\u00c8\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map(function (ds, index) {
    return new antlr4.dfa.DFA(ds, index);
});

function BigDataLexer(input) {
    antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

BigDataLexer.prototype = Object.create(antlr4.Lexer.prototype);
BigDataLexer.prototype.constructor = BigDataLexer;

Object.defineProperty(BigDataLexer.prototype, "atn", {
    get: function () {
        return atn;
    }
});

BigDataLexer.EOF = antlr4.Token.EOF;
BigDataLexer.T__0 = 1;
BigDataLexer.T__1 = 2;
BigDataLexer.T__2 = 3;
BigDataLexer.T__3 = 4;
BigDataLexer.T__4 = 5;
BigDataLexer.T__5 = 6;
BigDataLexer.T__6 = 7;
BigDataLexer.T__7 = 8;
BigDataLexer.T__8 = 9;
BigDataLexer.T__9 = 10;
BigDataLexer.T__10 = 11;
BigDataLexer.T__11 = 12;
BigDataLexer.T__12 = 13;
BigDataLexer.T__13 = 14;
BigDataLexer.T__14 = 15;
BigDataLexer.T__15 = 16;
BigDataLexer.T__16 = 17;
BigDataLexer.T__17 = 18;
BigDataLexer.T__18 = 19;
BigDataLexer.T__19 = 20;
BigDataLexer.T__20 = 21;
BigDataLexer.T__21 = 22;
BigDataLexer.T__22 = 23;
BigDataLexer.T__23 = 24;
BigDataLexer.T__24 = 25;
BigDataLexer.T__25 = 26;
BigDataLexer.T__26 = 27;
BigDataLexer.TYPES = 28;
BigDataLexer.STRINGTYPE = 29;
BigDataLexer.BOOLTYPE = 30;
BigDataLexer.INTTYPE = 31;
BigDataLexer.IDENTIFIER = 32;
BigDataLexer.NUMBER = 33;
BigDataLexer.STRING = 34;
BigDataLexer.WHITESPACE = 35;

BigDataLexer.prototype.channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"];

BigDataLexer.prototype.modeNames = ["DEFAULT_MODE"];

BigDataLexer.prototype.literalNames = [null, "'if'", "'('", "')'", "'else'",
    "'{'", "'}'", "'while'", "'for'",
    "';'", "'/'", "'*'", "'-'", "'+'",
    "'<'", "'<='", "'>'", "'>='", "'=='",
    "'!='", "'&&'", "'||'", "'var'",
    "':'", "'='", "'fun'", "'return'",
    "','", null, "'String'", "'Boolean'",
    "'Int'"];

BigDataLexer.prototype.symbolicNames = [null, null, null, null, null, null,
    null, null, null, null, null, null,
    null, null, null, null, null, null,
    null, null, null, null, null, null,
    null, null, null, null, "TYPES",
    "STRINGTYPE", "BOOLTYPE", "INTTYPE",
    "IDENTIFIER", "NUMBER", "STRING",
    "WHITESPACE"];

BigDataLexer.prototype.ruleNames = ["T__0", "T__1", "T__2", "T__3", "T__4",
    "T__5", "T__6", "T__7", "T__8", "T__9",
    "T__10", "T__11", "T__12", "T__13",
    "T__14", "T__15", "T__16", "T__17",
    "T__18", "T__19", "T__20", "T__21",
    "T__22", "T__23", "T__24", "T__25",
    "T__26", "TYPES", "STRINGTYPE", "BOOLTYPE",
    "INTTYPE", "IDENTIFIER", "NUMBER",
    "STRING", "WHITESPACE"];

BigDataLexer.prototype.grammarFileName = "BigData.g4";


exports.BigDataLexer = BigDataLexer;

